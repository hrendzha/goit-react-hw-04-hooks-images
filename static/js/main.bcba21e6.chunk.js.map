{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/imagesApi.js","App.js","js/scrollToNewImages.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","searchBar","searchForm","e","preventDefault","type","btn","btnLabel","input","autoComplete","autoFocus","required","placeholder","value","onChange","target","ImageGalleryItem","src","photoDescr","onModalOpen","largeImageUrl","image","alt","onClick","ImageGallery","photos","gallery","map","id","webformatURL","largeImageURL","tags","galleryItem","Button","Modal","onModalClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","overlay","currentTarget","modal","axios","defaults","baseURL","imagesApi","page","searchParams","URLSearchParams","key","q","per_page","orientation","image_type","get","then","res","data","hits","App","setPhotos","isLoaderVisible","setIsLoaderVisible","isModalOpen","setIsModalOpen","setLargeImageUrl","query","setQuery","setPage","toggleLoader","prevPhotos","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","error","console","log","finally","bool","Boolean","length","visible","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bcba21e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__gboaM\",\"galleryItem\":\"ImageGallery_galleryItem__zZSAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GjdW\",\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageGalleryItem_image__2xsbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3xaJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"Searchbar_searchBar__3w0z0\",\"searchForm\":\"Searchbar_searchForm__23jwf\",\"btn\":\"Searchbar_btn__37Gab\",\"btnLabel\":\"Searchbar_btnLabel__2RFBj\",\"input\":\"Searchbar_input__2C4aO\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nfunction Searchbar({ onSubmit }) {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleChange = e => setSearchQuery(e.target.value);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        onSubmit(searchQuery);\n    };\n\n    return (\n        <header className={s.searchBar}>\n            <form className={s.searchForm} onSubmit={handleSubmit}>\n                <button type=\"submit\" className={s.btn}>\n                    <span className={s.btnLabel}>Search</span>\n                </button>\n\n                <input\n                    className={s.input}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    required\n                    placeholder=\"Search images and photos\"\n                    value={searchQuery}\n                    onChange={handleChange}\n                />\n            </form>\n        </header>\n    );\n}\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({ src, photoDescr, onModalOpen, largeImageUrl }) {\n    return (\n        <img\n            className={s.image}\n            src={src}\n            alt={photoDescr}\n            onClick={() => onModalOpen(largeImageUrl)}\n        />\n    );\n}\n\nImageGalleryItem.propTypes = {\n    src: PropTypes.string.isRequired,\n    photoDescr: PropTypes.string.isRequired,\n    onModalOpen: PropTypes.func.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery({ photos, onModalOpen }) {\n    return (\n        <ul className={s.gallery}>\n            {photos.map(\n                ({\n                    id,\n                    webformatURL: src,\n                    largeImageURL: largeImageUrl,\n                    tags: photoDescr,\n                }) => (\n                    <li className={s.galleryItem} key={id}>\n                        <ImageGalleryItem\n                            src={src}\n                            photoDescr={photoDescr}\n                            onModalOpen={onModalOpen}\n                            largeImageUrl={largeImageUrl}\n                        />\n                    </li>\n                ),\n            )}\n        </ul>\n    );\n}\n\nImageGallery.propTypes = {\n    photos: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        }).isRequired,\n    ).isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nfunction Button({ onClick }) {\n    return (\n        <button className={s.btn} type=\"button\" onClick={onClick}>\n            Load more\n        </button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nModal.propTypes = {\n    largeImageUrl: PropTypes.string.isRequired,\n    onModalClose: PropTypes.func.isRequired,\n};\n\nfunction Modal({ largeImageUrl, onModalClose }) {\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                onModalClose();\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [onModalClose]);\n\n    const handleOverlayClick = ({ target, currentTarget }) => {\n        if (target === currentTarget) {\n            onModalClose();\n        }\n    };\n\n    return (\n        <div className={s.overlay} onClick={handleOverlayClick}>\n            <div className={s.modal}>\n                <img src={largeImageUrl} alt=\"\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;\n","import axios from 'axios';\n\nvar API_KEY = '23262939-6c0fd5a3da3fb9e3fdc7add54';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst imagesApi = {\n    fetchWithQuery(searchQuery, page) {\n        const searchParams = new URLSearchParams({\n            key: API_KEY,\n            q: searchQuery,\n            page: page,\n            per_page: 12,\n            orientation: 'horizontal',\n            image_type: 'photo',\n        });\n\n        return axios.get(`?${searchParams}`).then(res =>\n            res.data.hits.map(({ id, webformatURL, largeImageURL, tags }) => ({\n                id,\n                webformatURL,\n                largeImageURL,\n                tags,\n            })),\n        );\n    },\n};\n\nexport { imagesApi };\n","import { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport { imagesApi } from './services/imagesApi';\nimport scrollToNewImages from './js/scrollToNewImages';\n\nfunction App() {\n    const [photos, setPhotos] = useState([]);\n    const [isLoaderVisible, setIsLoaderVisible] = useState(false);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [largeImageUrl, setLargeImageUrl] = useState('');\n    const [query, setQuery] = useState('');\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        if (!query) return;\n        toggleLoader();\n\n        imagesApi\n            .fetchWithQuery(query, page)\n            .then(photos => {\n                if (page > 1) {\n                    setPhotos(prevPhotos => [...prevPhotos, ...photos]);\n                    scrollToNewImages();\n                    return;\n                }\n                setPhotos([...photos]);\n            })\n            .catch(error => console.log(error))\n            .finally(() => toggleLoader());\n    }, [page, query]);\n\n    const toggleLoader = () => setIsLoaderVisible(bool => !bool);\n\n    const handleFormSubmit = query => {\n        setQuery(query);\n        setPage(1);\n    };\n\n    const handleLoadMoreBtnClick = () => setPage(page => page + 1);\n\n    const handleModalOpen = largeImageUrl => {\n        setIsModalOpen(true);\n        setLargeImageUrl(largeImageUrl);\n    };\n\n    const handleModalClose = () => setIsModalOpen(false);\n\n    return (\n        <>\n            <Searchbar onSubmit={handleFormSubmit} />\n\n            <ImageGallery photos={photos} onModalOpen={handleModalOpen} />\n\n            {Boolean(photos.length) && !isLoaderVisible && (\n                <Button onClick={handleLoadMoreBtnClick} />\n            )}\n            <Loader\n                className=\"loader\"\n                visible={isLoaderVisible}\n                type=\"ThreeDots\"\n                color=\"#00BFFF\"\n                height={80}\n                width={80}\n            />\n            {isModalOpen && (\n                <Modal\n                    largeImageUrl={largeImageUrl}\n                    onModalClose={handleModalClose}\n                />\n            )}\n        </>\n    );\n}\n\nexport default App;\n","export default function scrollToNewImages() {\n    window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n    });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}